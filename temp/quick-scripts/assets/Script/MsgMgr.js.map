{"version":3,"sources":["MsgMgr.js"],"names":["protobuf","require","ByteBuffer","LogicCmd","ClientCmd","ClientGuiCmd","MsgMgr","cc","Class","properties","MsgMapStr","MsgMapId","m_pbBuilder","registerMsg","msgStr","msgID","getMsgStrByID","pMSgStr","init","newBuilder","protoFromFile","url","raw","registerMsgByConfig","initLogicCmd","initClientCmd","undefined","initClientGuiCmd","pSelf","loader","loadRes","err","Cfg","MsgCfg","k","tempmsgname","parseInt","Net","initNet","CreateMsgByID","msgId","prostrs","split","length","PB","build","tempp","MsgToDecode","tempPB","CreateMsgByStr","msgstr","MsgRecvData","recvData","sys","isNative","pMSg","tempMsg","decode","reader","FileReader","readAsArrayBuffer","onload","e","buffertemp","result","idView","Uint32Array","pMsgData","slice","ClientMsg","msgname","msgcmd","PushClientMsg","LogicMsg","PushLogicMsg","sendMsgToServer","msgid","cMsg","senddata","toArrayBuffer","iBufSize","byteLength","resSend","ArrayBuffer","msgdata","Int8Array","ResSenddata","set","sendData","updateMsgMgr","dt","updateClientCmd","updateClientGuiCmd","updateLogicCmd","module","exports"],"mappings":"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","file":"MsgMgr.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["let protobuf = require(\"protobufjs\");\r\nlet ByteBuffer = require(\"bytebuffer\");\r\nvar LogicCmd = require(\"LogicCmd\").LogicCmd;\r\nvar ClientCmd = require(\"ClientCmd\").ClientCmd;\r\nvar ClientGuiCmd = require(\"ClientGuiCmd\").ClientGuiCmd;\r\n\r\nvar MsgMgr = cc.Class({\r\n\r\n    properties: {\r\n        MsgMapStr:null,\r\n        MsgMapId:null,\r\n        m_pbBuilder:null,\r\n    },\r\n\r\n    registerMsg:function(msgStr,msgID)\r\n    {\r\n        this.MsgMapStr[msgStr] = msgID;\r\n        this.MsgMapId[msgID] = msgStr;\r\n    },\r\n\r\n    getMsgStrByID:function(msgID)\r\n    {\r\n         var pMSgStr =  this.MsgMapId[msgID];\r\n         return pMSgStr;\r\n    },\r\n    \r\n    init:function()\r\n    {\r\n        if(this.m_pbBuilder == null)\r\n        {\r\n            this.m_pbBuilder = protobuf.newBuilder();\r\n            protobuf.protoFromFile(cc.url.raw('resources/msgconfig/Player.proto'),this.m_pbBuilder);\r\n            this.MsgMapStr= {};\r\n            this.MsgMapId = {};\r\n            this.registerMsgByConfig();\r\n            //this.registerMsg(\"Player.cPlayerInfo\",10001);  \r\n        }\r\n        if(cc.LogicCmd == null)\r\n        {\r\n            cc.LogicCmd = new LogicCmd;\r\n            cc.LogicCmd.initLogicCmd();\r\n        }\r\n        if(cc.ClientCmd == null)\r\n        {\r\n            cc.ClientCmd = new ClientCmd;\r\n            cc.ClientCmd.initClientCmd();\r\n        }\r\n        if(cc.ClientGuiCmd === undefined){\r\n            cc.ClientGuiCmd = new ClientGuiCmd;\r\n            cc.ClientGuiCmd.initClientGuiCmd();\r\n        }\r\n\r\n    },\r\n\r\n    registerMsgByConfig:function()\r\n    {\r\n        var pSelf = this;\r\n        cc.loader.loadRes('msgconfig/MsgRegisterMap', function(err, Cfg) \r\n        {\r\n            var MsgCfg = Cfg;\r\n            for(var k in MsgCfg)\r\n            {\r\n                var tempmsgname = MsgCfg[k];\r\n                pSelf.registerMsg(tempmsgname,parseInt(k));\r\n            }\r\n\r\n            //连接服务器\r\n            cc.Net.initNet(\"192.168.214.64\",\"10131\");\r\n        });\r\n\r\n    },\r\n\r\n    CreateMsgByID:function(msgId)\r\n    {\r\n        var pMSgStr =  this.MsgMapId[msgId];\r\n        if(pMSgStr != null)\r\n        {\r\n            var prostrs = pMSgStr.split(\".\");\r\n            if(prostrs.length != 2)\r\n            {\r\n                return null;\r\n            }\r\n            let PB = this.m_pbBuilder.build(prostrs[0]);          \r\n            var tempp = prostrs[1];\r\n            return new PB[tempp]();           \r\n        }\r\n        return null;\r\n    },\r\n\r\n    MsgToDecode:function(msgId)\r\n    {\r\n        var pMSgStr =  this.MsgMapId[msgId];\r\n        var tempPB = this.m_pbBuilder.build(pMSgStr);\r\n       \r\n        return tempPB;\r\n    },\r\n\r\n    CreateMsgByStr:function(msgstr)\r\n    {\r\n        var pMSgStr = msgstr;\r\n        var prostrs = pMSgStr.split(\".\");\r\n        if(prostrs.length != 2)\r\n        {\r\n            return null;\r\n        }\r\n        let PB = this.m_pbBuilder.build(prostrs[0]);          \r\n        var tempp = prostrs[1];\r\n        return new PB[tempp]();\r\n    },\r\n\r\n    MsgRecvData:function(recvData)\r\n    {            \r\n         if(cc.sys.isNative)\r\n         {\r\n            var pMSg = cc.MsgMgr.MsgToDecode(10004); \r\n            var tempMsg = pMSg.decode(recvData);\r\n         }\r\n         else\r\n         {\r\n             var reader = new FileReader();\r\n             reader.readAsArrayBuffer(recvData);\r\n             var pSelf = this;\r\n             reader.onload = function (e)\r\n             {               \r\n                    var buffertemp = reader.result;                  \r\n                    var idView = new Uint32Array(buffertemp,0,1);\r\n                    var pMSg = cc.MsgMgr.MsgToDecode(idView);\r\n                    //100000以上的是单局外的消息\r\n                     var pMsgData = buffertemp.slice(4); \r\n                    if(idView > 100000)\r\n                    {                                                \r\n                        var tempMsg = pMSg.decode(pMsgData);   \r\n                        var ClientMsg = {};\r\n                        ClientMsg.msgname = pSelf.getMsgStrByID(idView);\r\n                        ClientMsg.msgcmd = tempMsg;\r\n                        cc.ClientCmd.PushClientMsg(ClientMsg);\r\n                    }\r\n                    else\r\n                    {                                        \r\n                         var tempMsg = pMSg.decode(pMsgData);   \r\n                         var LogicMsg = {};\r\n                         LogicMsg.msgname = pSelf.getMsgStrByID(idView);\r\n                         LogicMsg.msgcmd = tempMsg;\r\n                         cc.LogicCmd.PushLogicMsg(LogicMsg);\r\n                    }                          \r\n             }\r\n         }     \r\n    },\r\n\r\n    sendMsgToServer:function(msgid,cMsg)\r\n    {        \r\n        let senddata = cMsg.toArrayBuffer();        \r\n        var iBufSize = senddata.byteLength;\r\n        var resSend = new ArrayBuffer(iBufSize+4);\r\n        var msgdata = new Int8Array(senddata);\r\n        var ResSenddata = new Int8Array(resSend);\r\n        ResSenddata[0] = msgid;\r\n        ResSenddata[1] = msgid>>8;\r\n        ResSenddata[2] = msgid>>16;\r\n        ResSenddata[3] = msgid>>24;\r\n        ResSenddata.set(msgdata,4);\r\n        cc.Net.sendData(resSend);     \r\n    },  \r\n\r\n    updateMsgMgr:function(dt){\r\n        if(cc.ClientCmd != null)\r\n        {\r\n            cc.ClientCmd.updateClientCmd(dt);\r\n        }   \r\n        if(cc.ClientGuiCmd !== undefined){\r\n            cc.ClientGuiCmd.updateClientGuiCmd(dt);\r\n        }\r\n        if(cc.LogicCmd != null)\r\n        {\r\n            cc.LogicCmd.updateLogicCmd(dt);\r\n        }    \r\n\r\n    }\r\n});\r\n\r\nmodule.exports = {MsgMgr};\r\n"]}